# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

DATABASE_URL="postgresql://local:local@local-db:5432/local"

# Go to auth-0 dashboard > your app > quickstart > nextjs to find the envs
AUTH0_SECRET='use [openssl rand -hex 32] to generate a 32 bytes value'
AUTH0_BASE_URL='http://localhost:3000'
AUTH0_ISSUER_BASE_URL='https://{yourDomain}'
AUTH0_CLIENT_ID='{yourClientId}'
AUTH0_CLIENT_SECRET='{yourClientSecret}'

# Auth0 Management API https://auth0.com/docs/secure/tokens/access-tokens/management-api-access-tokens
AUTH0_MANAGEMENT_API_CLIENT_ID='{machine-to-machine application client id}'
AUTH0_MANAGEMENT_API_CLIENT_SECRET='{machine-to-machine application client secret}'
AUTH0_TMP_API_TOKEN='{managementApiAccessToken}' # usually a tmp token from tmp access

# NEXTAUTH
NEXTAUTH_URL='http://localhost:3000'
NEXTAUTH_SECRET='use [openssl rand -hex 32] to generate a 32 bytes value'

# Prisma ERD https://www.npmjs.com/package/prisma-erd-generator
# DISABLE_ERD=true

# E2E Tests
TEST_USER=''
TEST_PASS=''

# Terraform Auth0
AUTH0_DOMAIN=''
AUTH0_CLIENT_ID=''
AUTH0_CLIENT_SECRET=''
